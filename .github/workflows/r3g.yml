name: Daily ImmortalWrt Build - r3g

on:
  schedule:
    - cron: '0 0 * * *'  # 每天午夜运行

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-24.10
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: config-r3g  # 或者 .config-hiwifi，根据需要选择
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache clang cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib g++-multilib git gnutls-dev gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses-dev libpython3-dev libreadline-dev libssl-dev libtool libyaml-dev libz-dev lld llvm lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip python3-ply python3-docutils python3-pyelftools qemu-utils re2c rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev zstd

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH immortalwrt
        ln -sf /workdir/immortalwrt $GITHUB_WORKSPACE/immortalwrt

    - name: Replace default-settings and config files
      run: |
        cp -r $GITHUB_WORKSPACE/default-settings/* $GITHUB_WORKSPACE/immortalwrt/package/emortal/
        cp $GITHUB_WORKSPACE/.config-r3g $GITHUB_WORKSPACE/immortalwrt/.config  # 或者 .config-hiwifi

    - name: Create package/git directory
      run: mkdir -p $GITHUB_WORKSPACE/immortalwrt/package/git

    - name: Clone additional repositories
      run: |
        cd $GITHUB_WORKSPACE/immortalwrt/package/git
        git clone https://gitee.com/suiyeyiu/luci-app-adguardhome.git
        git clone https://github.com/sirpdboy/luci-app-lucky.git
        git clone https://github.com/sbwml/luci-app-mosdns.git
        git clone https://github.com/fujr/QModem.git
        git clone https://github.com/EasyTier/luci-app-easytier.git
        git clone https://github.com/gSpotx2f/luci-app-disks-info.git
        git clone https://github.com/xiaorouji/openwrt-passwall2.git
        git clone https://github.com/sirpdboy/luci-app-taskplan.git

    - name: Update feeds
      run: cd $GITHUB_WORKSPACE/immortalwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd $GITHUB_WORKSPACE/immortalwrt && ./scripts/feeds install -a

    - name: Download package
      id: package
      run: |
        cd $GITHUB_WORKSPACE/immortalwrt
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd $GITHUB_WORKSPACE/immortalwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: ImmortalWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: $GITHUB_WORKSPACE/immortalwrt/bin

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd $GITHUB_WORKSPACE/immortalwrt/bin/targets/ramips/mt7621
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: ImmortalWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
        touch release.txt
        [ ${UPLOAD_GOFILE} = true && ${{ steps.gofile.outputs.url }} ] && echo "🔗 [GoFile](${{ steps.gofile.outputs.url }})" >> release.txt
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware to release
      uses: svenstaro/upload-release-action@v2-release
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ env.FIRMWARE }}/*.img.gz  # 根据你的构建输出调整路径
        asset_name: immortalwrt-$(date +%Y%m%d).img.gz
        tag: $(date +%Y%m%d)
        body: Daily build of ImmortalWrt
        overwrite: true

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 0
        keep_minimum_runs: 2

      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
